% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GTF.tool.R
\name{add_UTR}
\alias{add_UTR}
\title{Add UTR (Untranslated Region) Annotations to Genomic Data}
\usage{
add_UTR(
  input,
  five_prime_utr_length = 400,
  three_prime_utr_length = 800,
  biotype = "protein_coding",
  transcript_limit = NULL,
  meta_string = NULL,
  genetic_elements = c("TRANSCRIPT", "MRNA", "CDS")
)
}
\arguments{
\item{input}{A data frame containing genomic data. The data frame should have the following columns:
- `chr`: Chromosome identifier
- `start`: Start position of the annotation
- `end`: End position of the annotation
- `strand`: Strand information ('+' or '-')
- `annotationType`: Type of annotation (e.g., 'EXON', 'CDS')
- `gene_name`: Name of the associated gene}

\item{five_prime_utr_length}{Integer, the default length of the 5' UTR to add (default: 400).}

\item{three_prime_utr_length}{Integer, the default length of the 3' UTR to add (default: 800).}

\item{genetic_elements}{A character vector of annotation types to consider for UTR extension 
(default: c("EXON", "CDS", "TRANSCRIPT", "MRNA")).}
}
\value{
A data frame with the original input data and additional rows for the predicted UTRs and transcripts.
  Each added row includes the following fields:
  - `source`: "JBIO-predicted" for newly added annotations
  - `annotationType`: Indicates 'five_prime_UTR', 'three_prime_UTR', or 'transcript'
  - `start` and `end`: Updated start and end positions for the UTRs or transcript
  - `strand`: Strand information copied from the input data
  - Other fields as present in the input data
}
\description{
This function extends genomic annotations by adding predicted 5' and 3' untranslated regions (UTRs) 
based on input genomic data. It identifies genes within specified genetic elements and adjusts UTR lengths
dynamically based on proximity to neighboring genes.
Data must be pre-loaded using load_annotation() followed by create_GTF_df().
}
\details{
The function iterates over unique chromosomes and strand orientations, calculating appropriate UTR lengths
for each gene. It dynamically adjusts the UTR lengths based on available space between genes to avoid overlap.
}
\examples{

# Run the function
output_data <- add_UTR(input, five_prime_utr_length = 400, three_prime_utr_length = 800, genetic_elements = c("EXON", "CDS", 'TRANSCRIPT', 'MRNA'))

}
